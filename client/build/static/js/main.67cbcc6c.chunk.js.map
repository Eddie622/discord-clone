{"version":3,"sources":["features/appSlice.js","features/userSlice.js","components/sidebarChannel/SidebarChannel.jsx","components/sidebar/Sidebar.jsx","components/chatHeader/ChatHeader.jsx","components/message/Message.jsx","components/chat/Chat.jsx","components/login/Login.jsx","components/register/Register.jsx","App.js","app/store.js","serviceWorker.js","index.js"],"names":["appSlice","createSlice","name","initialState","channels","channelId","channelName","reducers","setChannels","state","action","payload","setChannelInfo","actions","selectChannels","app","selectChannelId","selectChannelName","userSlice","user","login","logout","selectUser","SidebarChannel","props","dispatch","useDispatch","useSelector","useState","setChannelName","handleChangeChannelName","e","a","preventDefault","axios","put","withCredentials","then","res","console","log","catch","errors","getChannels","handleDeleteChannel","stopPropagation","delete","className","onClick","_id","creatorID","onSubmit","onChange","target","value","type","Tooltip","title","placement","Sidebar","useCallback","get","data","useEffect","createNewChannel","post","creator_id","displayName","map","key","fontSize","Avatar","src","photo","username","substring","ChatHeader","channel","placeholder","Message","creator","setCreator","user_id","handleDelete","message_id","getMessages","moment","timestamp","startOf","fromNow","content","Chat","input","setInput","messages","setMessages","io","socket","reverse","on","msg","prevMessages","sendMessage","message","createdAt","disabled","Login","setUsername","password","setPassword","error","setError","signIn","guestSignIn","alt","htmlFor","autoComplete","Button","to","Register","setDisplayName","setPhoto","confirmPassword","setConfirmPassword","setErrors","newUser","navigate","properties","App","Dash","path","configureStore","reducer","userReducer","appReducer","Boolean","window","location","hostname","match","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.67cbcc6c.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const appSlice = createSlice({\r\n  name: 'app',\r\n  initialState: {\r\n    channels: [],\r\n    channelId: null,\r\n    channelName: null,\r\n  },\r\n  reducers: {\r\n    setChannels: (state, action) => {\r\n      state.channels = action.payload.channels;\r\n    },\r\n    setChannelInfo: (state, action) => {\r\n      state.channelId = action.payload.channelId;\r\n      state.channelName = action.payload.channelName;\r\n    }\r\n  },\r\n});\r\n\r\nexport const { setChannels, setChannelInfo } = appSlice.actions;\r\n\r\nexport const selectChannels = state => state.app.channels;\r\nexport const selectChannelId = state => state.app.channelId;\r\nexport const selectChannelName = state => state.app.channelName;\r\n\r\nexport default appSlice.reducer;","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n    user: null,\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      state.user = null;\r\n    }\r\n  },\r\n});\r\n\r\nexport const { login, logout } = userSlice.actions;\r\n\r\nexport const selectUser = state => state.user.user;\r\n\r\nexport default userSlice.reducer;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setChannelInfo } from \"../../features/appSlice\";\r\nimport \"./SidebarChannel.css\";\r\nimport axios from \"axios\";\r\nimport { selectUser } from \"../../features/userSlice\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\n\r\nconst SidebarChannel = (props) => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(selectUser);\r\n  const [channelName, setChannelName] = useState(props.channelName);\r\n\r\n  const handleChangeChannelName = async (e) => {\r\n    e.preventDefault();\r\n    await axios\r\n      .put(\r\n        `http://localhost:8000/api/channel/${props.channelId}`,\r\n        {\r\n          name: channelName,\r\n        },\r\n        { withCredentials: true }\r\n      )\r\n      .then((res) => console.log(res))\r\n      .catch((errors) => console.log(errors));\r\n    dispatch(\r\n      setChannelInfo({\r\n        channelName: channelName,\r\n      })\r\n    );\r\n    props.getChannels();\r\n  };\r\n\r\n  const handleDeleteChannel = async (e) => {\r\n    e.stopPropagation();\r\n    dispatch(\r\n      setChannelInfo({\r\n        channelId: null,\r\n        channelName: null,\r\n      })\r\n    );\r\n    await axios\r\n      .delete(`http://localhost:8000/api/channel/${props.channelId}`, {\r\n        withCredentials: true,\r\n      })\r\n      .then((res) => console.log(res))\r\n      .catch((errors) => console.log(errors));\r\n    props.getChannels();\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"sidebarChannel\"\r\n      onClick={() =>\r\n        dispatch(\r\n          setChannelInfo({\r\n            channelId: props.channelId,\r\n            channelName: props.channelName,\r\n          })\r\n        )\r\n      }\r\n    >\r\n      {user._id === props.creatorID ? (\r\n        <form onSubmit={handleChangeChannelName}>\r\n          <h4>\r\n            <span className=\"sidebarChannel_hash\">#</span>\r\n            <input\r\n              className=\"channel_name\"\r\n              onChange={(e) => setChannelName(e.target.value)}\r\n              value={channelName}\r\n            />\r\n            <button className=\"channel_inputButton\" type=\"submit\"></button>\r\n            <Tooltip title=\"delete channel\" placement=\"top\">\r\n              <DeleteForeverIcon onClick={handleDeleteChannel} />\r\n            </Tooltip>\r\n          </h4>\r\n        </form>\r\n      ) : (\r\n        <h4>\r\n          <span className=\"sidebarChannel_hash\">#</span>\r\n          {props.channelName}\r\n        </h4>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SidebarChannel;\r\n","import React, { useCallback, useEffect } from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport SidebarChannel from \"../sidebarChannel/SidebarChannel\";\r\nimport SignalCellularAltIcon from \"@material-ui/icons/SignalCellularAlt\";\r\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\r\nimport CallIcon from \"@material-ui/icons/Call\";\r\nimport { Avatar, Tooltip } from \"@material-ui/core\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport HeadsetIcon from \"@material-ui/icons/Headset\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport { logout, selectUser } from \"../../features/userSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { selectChannels, setChannels } from \"../../features/appSlice\";\r\n\r\nconst Sidebar = () => {\r\n  const user = useSelector(selectUser);\r\n  const channels = useSelector(selectChannels);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const getChannels = useCallback(() => {\r\n    axios\r\n      .get(`http://localhost:8000/api/channel/`, { withCredentials: true })\r\n      .then((res) =>\r\n        dispatch(\r\n          setChannels({\r\n            channels: res.data,\r\n          })\r\n        )\r\n      )\r\n      .catch((errors) => console.log(errors));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    getChannels();\r\n  }, [user._id, getChannels]);\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n    axios\r\n      .post(`http://localhost:8000/api/logout`, {}, { withCredentials: true })\r\n      .then((res) => console.log(res))\r\n      .catch((errors) => console.log(errors));\r\n  };\r\n\r\n  const createNewChannel = async () => {\r\n    await axios\r\n      .post(\r\n        `http://localhost:8000/api/channel`,\r\n        {\r\n          creator_id: user._id,\r\n          name: \"NewChannel\",\r\n        },\r\n        { withCredentials: true }\r\n      )\r\n      .then((res) => console.log(res))\r\n      .catch((errors) => console.log(errors));\r\n    getChannels();\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"sidebar_top\">\r\n        <h3>{user.displayName}</h3>\r\n        <ExpandMoreIcon />\r\n      </div>\r\n\r\n      <div className=\"sidebar_channels\">\r\n        <div className=\"sidebar_channelsHeader\">\r\n          <div className=\"sidebar_header\">\r\n            <ExpandMoreIcon />\r\n            <h4>Text Channels</h4>\r\n          </div>\r\n          <Tooltip title=\"create channel\" placement=\"top\">\r\n            <AddIcon\r\n              onClick={createNewChannel}\r\n              className=\"sidebar_addChannel\"\r\n            />\r\n          </Tooltip>\r\n        </div>\r\n\r\n        <div className=\"sidebar_channelsList\">\r\n          {channels.map(({ _id, name, creator_id }) => (\r\n            <SidebarChannel\r\n              key={_id}\r\n              channelId={_id}\r\n              channelName={name}\r\n              creatorID={creator_id}\r\n              getChannels={getChannels}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"sidebar_voice\">\r\n        <SignalCellularAltIcon className=\"sidebar_voiceIcon\" fontSize=\"large\" />\r\n\r\n        <div className=\"sidebar_voiceInfo\">\r\n          <h3>Voice Connected</h3>\r\n          <p>Stream</p>\r\n        </div>\r\n\r\n        <div className=\"sidebar_voiceIcons\">\r\n          <InfoOutlinedIcon />\r\n          <CallIcon />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"sidebar_profile\">\r\n        <Avatar src={user.photo} />\r\n        <div className=\"sidebar_profileInfo\">\r\n          <h3>{user.username}</h3>\r\n          <p>#{user._id.substring(0, 5)}</p>\r\n        </div>\r\n\r\n        <div className=\"sidebar_profileIcons\">\r\n          <MicIcon />\r\n          <HeadsetIcon />\r\n          <Tooltip title=\"logout\">\r\n            <SettingsIcon className=\"setting\" onClick={handleLogout} />\r\n          </Tooltip>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport \"./ChatHeader.css\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport PeopleAltRoundedIcon from \"@material-ui/icons/PeopleAltRounded\";\r\nimport SearchRoundedIcon from \"@material-ui/icons/SearchRounded\";\r\nimport SendRoundedIcon from \"@material-ui/icons/SendRounded\";\r\nimport HelpRoundedIcon from \"@material-ui/icons/HelpRounded\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectChannelName } from \"../../features/appSlice\";\r\n\r\nconst ChatHeader = () => {\r\n  const channel = useSelector(selectChannelName);\r\n\r\n  return (\r\n    <div className=\"chatHeader\">\r\n      <div className=\"chatHeader_left\">\r\n        <h3>\r\n          <span className=\"chatHeader_hash\">#</span>\r\n          {channel}\r\n        </h3>\r\n      </div>\r\n\r\n      <div className=\"chatHeader_right\">\r\n        <EditIcon />\r\n        <NotificationsIcon />\r\n        <PeopleAltRoundedIcon />\r\n\r\n        <div className=\"chatHeader_search\">\r\n          <input placeholder=\"Search\" />\r\n          <SearchRoundedIcon />\r\n        </div>\r\n\r\n        <SendRoundedIcon />\r\n        <HelpRoundedIcon />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatHeader;\r\n","import { Avatar } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./Message.css\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../../features/userSlice\";\r\nimport { selectChannelId } from \"../../features/appSlice\";\r\n\r\nconst Message = (props) => {\r\n  const [creator, setCreator] = useState(\"\");\r\n  const user = useSelector(selectUser);\r\n  const channelId = useSelector(selectChannelId);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://localhost:8000/api/user/${props.user_id}`, {\r\n        withCredentials: true,\r\n      })\r\n      .then((res) => {\r\n        setCreator(res.data);\r\n      })\r\n      .catch((errors) => console.log(errors));\r\n  }, [props.user_id]);\r\n\r\n  const handleDelete = async () => {\r\n    await axios\r\n      .put(\r\n        `http://localhost:8000/api/channel/${channelId}/remove_message`,\r\n        {\r\n          message_id: props._id,\r\n        },\r\n        { withCredentials: true }\r\n      )\r\n      .then((res) => console.log(res))\r\n      .catch((errors) => console.log(errors));\r\n    props.getMessages();\r\n  };\r\n\r\n  return (\r\n    <div className=\"message\">\r\n      <Avatar src={creator.photo} />\r\n      <div className=\"message_info\">\r\n        <h4>\r\n          {creator.displayName}\r\n          <span className=\"message_timestamp\">\r\n            {moment(props.timestamp).startOf(\"hour\").fromNow()}\r\n          </span>\r\n          {user._id === creator._id ? (\r\n            <>\r\n              {/* <EditIcon /> */}\r\n              <DeleteForeverIcon onClick={handleDelete} />\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </h4>\r\n        <p>{props.content}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport ChatHeader from \"../chatHeader/ChatHeader\";\r\nimport \"./Chat.css\";\r\nimport Message from \"../message/Message\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport CardGiftcardIcon from \"@material-ui/icons/CardGiftcard\";\r\nimport GifIcon from \"@material-ui/icons/Gif\";\r\nimport EmojiEmotionsIcon from \"@material-ui/icons/EmojiEmotions\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../../features/userSlice\";\r\nimport { selectChannelId, selectChannelName } from \"../../features/appSlice\";\r\nimport axios from \"axios\";\r\nimport io from \"socket.io-client\";\r\n\r\nconst Chat = () => {\r\n  const user = useSelector(selectUser);\r\n  const channelId = useSelector(selectChannelId);\r\n  const channelName = useSelector(selectChannelName);\r\n  const [input, setInput] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [socket] = useState(() => io(\":8000\"));\r\n\r\n  const getMessages = useCallback(() => {\r\n    axios\r\n      .get(`http://localhost:8000/api/channel/${channelId}`, {\r\n        withCredentials: true,\r\n      })\r\n      .then((res) => setMessages(res.data.messages.reverse()))\r\n      .catch((errors) => console.log(errors));\r\n  }, [channelId]);\r\n\r\n  useEffect(() => {\r\n    if (channelId) {\r\n      getMessages();\r\n    }\r\n  }, [channelId, getMessages]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"new_message_from_server\", (msg) => {\r\n      setMessages((prevMessages) => {\r\n        return [msg, ...prevMessages];\r\n      });\r\n    });\r\n  }, [socket]);\r\n\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n    if (input) {\r\n      await axios\r\n        .put(\r\n          `http://localhost:8000/api/channel/${channelId}/add_message`,\r\n          {\r\n            creator_id: user._id,\r\n            content: input,\r\n          },\r\n          { withCredentials: true }\r\n        )\r\n        .then((res) => console.log(res))\r\n        .catch((errors) => console.log(errors));\r\n    }\r\n    setInput(\"\");\r\n    getMessages();\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat\">\r\n      <ChatHeader />\r\n\r\n      <div className=\"chat_messages\">\r\n        {messages.map((message) => (\r\n          <Message\r\n            key={message._id}\r\n            _id={message._id}\r\n            content={message.content}\r\n            user_id={message.creator_id}\r\n            timestamp={message.createdAt}\r\n            getMessages={getMessages}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"chat_input\">\r\n        <AddCircleIcon fontSize=\"large\" />\r\n        <form>\r\n          <input\r\n            disabled={!channelId}\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            placeholder={`Message #${channelName}`}\r\n          />\r\n          <button\r\n            disabled={!channelId}\r\n            onClick={sendMessage}\r\n            className=\"chat_inputButton\"\r\n            type=\"submit\"\r\n          ></button>\r\n        </form>\r\n\r\n        <div className=\"chat_inputIcons\">\r\n          <CardGiftcardIcon fontSize=\"large\" />\r\n          <GifIcon fontSize=\"large\" />\r\n          <EmojiEmotionsIcon fontSize=\"large\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import { Button } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login } from \"../../features/userSlice\";\r\nimport axios from \"axios\";\r\nimport \"./Login.css\";\r\nimport { Link } from \"@reach/router\";\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const signIn = async (e) => {\r\n    e.preventDefault();\r\n\r\n    await axios\r\n      .post(\r\n        `http://localhost:8000/api/login`,\r\n        { username, password },\r\n        { withCredentials: true }\r\n      )\r\n      .then(async (res) => {\r\n        console.log(res);\r\n        await axios\r\n          .get(`http://localhost:8000/api/users/loggedin`, {\r\n            withCredentials: true,\r\n          })\r\n          .then((res) => {\r\n            dispatch(\r\n              login({\r\n                _id: res.data._id,\r\n                username: res.data.username,\r\n                photo: res.data.photo,\r\n                displayName: res.data.displayName,\r\n                channels: res.data.channels,\r\n              })\r\n            );\r\n          })\r\n          .catch((errors) => console.log(errors));\r\n      })\r\n      .catch((errors) => {\r\n        if (errors) {\r\n          setError(\"Invalid Username / Password\");\r\n        }\r\n      });\r\n  };\r\n\r\n  const guestSignIn = async (e) => {\r\n    e.preventDefault();\r\n\r\n    await axios\r\n      .post(\r\n        `http://localhost:8000/api/login`,\r\n        { username: \"guestuser\", password: \"guestpass\" },\r\n        { withCredentials: true }\r\n      )\r\n      .then(async (res) => {\r\n        await axios\r\n          .get(`http://localhost:8000/api/users/loggedin`, {\r\n            withCredentials: true,\r\n          })\r\n          .then((res) => {\r\n            dispatch(\r\n              login({\r\n                _id: res.data._id,\r\n                username: res.data.username,\r\n                photo: res.data.photo,\r\n                displayName: res.data.displayName,\r\n                channels: res.data.channels,\r\n              })\r\n            );\r\n          })\r\n          .catch((errors) => console.log(errors));\r\n      })\r\n      .catch((errors) => console.log(errors));\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"login_logo\">\r\n        <img\r\n          src=\"https://upload.wikimedia.org/wikipedia/sco/thumb/9/98/Discord_logo.svg/800px-Discord_logo.svg.png\"\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <form onSubmit={signIn}>\r\n        <label htmlFor=\"username\">\r\n          Username {error ? <p className=\"text-danger\">{error}</p> : \"\"}\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          autoComplete=\"username\"\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        ></input>\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          autoComplete=\"current-password\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        ></input>\r\n        <Button type=\"submit\">Sign In</Button>\r\n        <Button className=\"guestLogin\" onClick={guestSignIn}>\r\n          Guest Sign In\r\n        </Button>\r\n        <Link className=\"register_link\" to=\"/register\">\r\n          New around here? Register!\r\n        </Link>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Link, navigate } from \"@reach/router\";\r\nimport \"./Register.css\";\r\nimport axios from \"axios\";\r\n\r\nconst Register = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [displayName, setDisplayName] = useState(\"\");\r\n  const [photo, setPhoto] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const register = (e) => {\r\n    e.preventDefault();\r\n    const newUser = { username, displayName, photo, password, confirmPassword };\r\n    axios\r\n      .post(`http://localhost:8000/api/register`, newUser)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.errors) {\r\n          setErrors(res.data.errors);\r\n        } else {\r\n          navigate(\"/\");\r\n        }\r\n      })\r\n      .catch((errors) => console.log(errors));\r\n  };\r\n\r\n  return (\r\n    <div className=\"register\">\r\n      <form onSubmit={register}>\r\n        <h4>REGISTER</h4>\r\n        <label htmlFor=\"username\">\r\n          Username{\" \"}\r\n          {errors.username ? (\r\n            <span className=\"text-danger\">\r\n              {errors.username.properties.message}\r\n            </span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </label>\r\n        <input\r\n          name=\"username\"\r\n          type=\"text\"\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        ></input>\r\n        <label htmlFor=\"displayName\">\r\n          Display Name{\" \"}\r\n          {errors.displayName ? (\r\n            <p className=\"text-danger\">\r\n              {errors.displayName.properties.message}\r\n            </p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </label>\r\n        <input\r\n          name=\"displayName\"\r\n          type=\"text\"\r\n          onChange={(e) => setDisplayName(e.target.value)}\r\n        ></input>\r\n        <label htmlFor=\"photo\">\r\n          Photo (URL){\" \"}\r\n          {errors.photo ? (\r\n            <p className=\"text-danger\">{errors.photo.properties.message}</p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </label>\r\n        <input\r\n          name=\"photo\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          onChange={(e) => setPhoto(e.target.value)}\r\n        ></input>\r\n        <label htmlFor=\"password\">\r\n          Password{\" \"}\r\n          {errors.password ? (\r\n            <p className=\"text-danger\">{errors.password.properties.message}</p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </label>\r\n        <input\r\n          type=\"password\"\r\n          autoComplete=\"new-password\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        ></input>\r\n        <label htmlFor=\"confirmPassword\">\r\n          Confirm Password{\" \"}\r\n          {errors.confirmPassword ? (\r\n            <p className=\"text-danger\">\r\n              {errors.confirmPassword.properties.message}\r\n            </p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </label>\r\n        <input\r\n          name=\"confirmPassword\"\r\n          type=\"password\"\r\n          autoComplete=\"new-password\"\r\n          onChange={(e) => setConfirmPassword(e.target.value)}\r\n        ></input>\r\n        <Button type=\"submit\">Submit</Button>\r\n        <Link className=\"return_link\" to=\"../\">\r\n          Return\r\n        </Link>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useEffect } from \"react\";\nimport SideBar from \"./components/sidebar/Sidebar\";\nimport Chat from \"./components/chat/Chat\";\nimport \"./App.css\";\nimport Login from \"./components/login/Login\";\nimport { Router } from \"@reach/router\";\nimport Register from \"./components/register/Register\";\nimport { login, selectUser } from \"./features/userSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\n\nfunction App() {\n\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    axios.get(`http://localhost:8000/api/users/loggedin`, { withCredentials: true })\n      .then(res => {\n        dispatch(login({\n          _id: res.data._id,\n          username: res.data.username,\n          photo: res.data.photo,\n          displayName: res.data.displayName,\n          channels: res.data.channels\n        }))\n      }).catch(errors => console.log(errors)\n      );\n  }, [dispatch]);\n\n  const Dash = () => {\n    return (\n      <div className=\"app\">\n        <SideBar />\n        <Chat />\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <Router>\n        {user ?\n          (\n            <Dash path=\"/\" />\n          ) : (\n            <>\n              <Login path=\"/\" />\n              <Register path=\"/register\" />\n            </>\n          )\n        }\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport userReducer from '../features/userSlice';\r\nimport appReducer from '../features/appSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n    app: appReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}