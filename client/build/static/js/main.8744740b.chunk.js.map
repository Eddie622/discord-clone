{"version":3,"sources":["features/appSlice.js","features/userSlice.js","components/sidebarChannel/SidebarChannel.jsx","components/sidebar/Sidebar.jsx","components/chatHeader/ChatHeader.jsx","components/message/Message.jsx","components/chat/Chat.jsx","components/login/Login.jsx","components/register/Register.jsx","App.js","app/store.js","serviceWorker.js","index.js"],"names":["appSlice","createSlice","name","initialState","channelId","channelName","reducers","setChannelInfo","state","action","payload","actions","selectChannelId","app","selectChannelName","userSlice","user","login","logout","selectUser","SidebarChannel","props","dispatch","useDispatch","useSelector","useState","setChannelName","className","onClick","_id","creatorID","onSubmit","e","preventDefault","axios","put","then","res","console","log","catch","errors","onChange","target","value","type","Sidebar","channels","setChannels","useEffect","get","data","filter","c","members","includes","addChannel","newChannel_id","channel_id","displayName","post","creator_id","err","map","key","fontSize","Avatar","src","photo","username","substring","ChatHeader","channel","placeholder","Message","creator","setCreator","user_id","moment","timestamp","startOf","fromNow","message_id","content","Chat","input","setInput","messages","setMessages","io","socket","reverse","on","msg","prevMessages","message","createdAt","disabled","Login","setUsername","password","setPassword","error","setError","alt","withCredentials","navigate","htmlFor","autoComplete","Button","to","Register","setDisplayName","setPhoto","confirmPassword","setConfirmPassword","setErrors","newUser","properties","App","Dash","path","configureStore","reducer","userReducer","appReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8744740b.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const appSlice = createSlice({\r\n  name: 'app',\r\n  initialState: {\r\n    channelId: null,\r\n    channelName: null,\r\n  },\r\n  reducers: {\r\n    setChannelInfo: (state, action) => {\r\n      state.channelId = action.payload.channelId;\r\n      state.channelName = action.payload.channelName;\r\n    }\r\n  },\r\n});\r\n\r\nexport const { setChannelInfo } = appSlice.actions;\r\n\r\nexport const selectChannelId = state => state.app.channelId;\r\nexport const selectChannelName = state => state.app.channelName;\r\n\r\nexport default appSlice.reducer;","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n    user: null,\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      state.user = null;\r\n    }\r\n  },\r\n});\r\n\r\nexport const { login, logout } = userSlice.actions;\r\n\r\nexport const selectUser = state => state.user.user;\r\n\r\nexport default userSlice.reducer;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setChannelInfo } from '../../features/appSlice';\r\nimport \"./SidebarChannel.css\";\r\nimport axios from 'axios';\r\nimport { selectUser } from '../../features/userSlice';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\nconst SidebarChannel = props => {\r\n\tconst dispatch = useDispatch();\r\n\tconst user = useSelector(selectUser);\r\n\tconst [channelName, setChannelName] = useState(props.channelName);\r\n\r\n\tconst handleChangeChannelName = e => {\r\n\t\te.preventDefault();\r\n\t\taxios.put(`http://localhost:8000/api/channel/${props.channelId}`, {name : channelName})\r\n\t\t\t.then( res => console.log(res), dispatch(\r\n\t\t\t\tsetChannelInfo({\r\n\t\t\t\t\tchannelName: channelName\r\n\t\t\t\t})\r\n\t\t\t))\r\n\t\t\t.catch( errors => console.log(errors)\r\n\t\t);\r\n\t}\r\n\r\n\tconst handleDeleteChannel = e => {\r\n\t\te.preventDefault();\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"sidebarChannel\"\r\n\t\t\tonClick={() =>\r\n\t\t\t\tdispatch(\r\n\t\t\t\t\tsetChannelInfo({\r\n\t\t\t\t\t\tchannelId: props.channelId,\r\n\t\t\t\t\t\tchannelName: props.channelName\r\n\t\t\t\t\t})\r\n\t\t\t\t)}\r\n\t\t>\r\n\t\t\t{ user._id === props.creatorID ? \r\n\t\t\t<form onSubmit={handleChangeChannelName}>\r\n\t\t\t\t<h4>\r\n\t\t\t\t\t<span className=\"sidebarChannel_hash\">#</span>\r\n\t\t\t\t\t<input className=\"channel_name\" onChange={e => setChannelName(e.target.value)} value={channelName} />\r\n\t\t\t\t\t<button className=\"channel_inputButton\" type=\"submit\"></button>\r\n\t\t\t\t\t<DeleteForeverIcon onClick={handleDeleteChannel} />\r\n\t\t\t\t</h4>\r\n\t\t\t</form>\r\n\t\t\t: \r\n\t\t\t<h4>\r\n\t\t\t\t<span className='sidebarChannel_hash'>#</span>{props.channelName}\r\n\t\t\t</h4>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default SidebarChannel;","import React, { useEffect, useState } from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport SidebarChannel from \"../sidebarChannel/SidebarChannel\";\r\nimport SignalCellularAltIcon from \"@material-ui/icons/SignalCellularAlt\";\r\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\r\nimport CallIcon from \"@material-ui/icons/Call\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport HeadsetIcon from \"@material-ui/icons/Headset\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport { selectUser } from \"../../features/userSlice\";\r\nimport { useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\nconst Sidebar = () => {\r\n  const user = useSelector(selectUser);\r\n  const [channels, setChannels] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://localhost:8000/api/channel/`)\r\n      .then((res) => {\r\n        setChannels(res.data.filter((c) => c.members.includes(user._id)));\r\n      })\r\n      .catch((errors) => console.log(errors));\r\n  }, [channels, user._id]);\r\n\r\n  const createNewChannel = () => {\r\n    axios\r\n      .post(`http://localhost:8000/api/channel`, {\r\n        creator_id: user._id,\r\n        name: \"ChannelName\",\r\n      })\r\n      .then((res) => addChannel(res.data._id))\r\n      .catch((errors) => console.log(errors));\r\n  };\r\n\r\n  const addChannel = (newChannel_id) => {\r\n    axios\r\n      .put(`http://localhost:8000/api/user/${user._id}/add_channel`, {\r\n        channel_id: newChannel_id,\r\n      })\r\n      .then((res) => console.log(res))\r\n      .catch((errors) => console.log(errors));\r\n  };\r\n\r\n  const handleAddChannel = (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      createNewChannel();\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"sidebar_top\">\r\n        <h3>{user.displayName}</h3>\r\n        <ExpandMoreIcon />\r\n      </div>\r\n\r\n      <div className=\"sidebar_channels\">\r\n        <div className=\"sidebar_channelsHeader\">\r\n          <div className=\"sidebar_header\">\r\n            <ExpandMoreIcon />\r\n            <h4>Text Channels</h4>\r\n          </div>\r\n          <AddIcon onClick={handleAddChannel} className=\"sidebar_addChannel\" />\r\n        </div>\r\n\r\n        <div className=\"sidebar_channelsList\">\r\n          {channels.map(({ _id, name, creator_id }) => (\r\n            <SidebarChannel\r\n              key={_id}\r\n              channelId={_id}\r\n              channelName={name}\r\n              creatorID={creator_id}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"sidebar_voice\">\r\n        <SignalCellularAltIcon className=\"sidebar_voiceIcon\" fontSize=\"large\" />\r\n\r\n        <div className=\"sidebar_voiceInfo\">\r\n          <h3>Voice Connected</h3>\r\n          <p>Stream</p>\r\n        </div>\r\n\r\n        <div className=\"sidebar_voiceIcons\">\r\n          <InfoOutlinedIcon />\r\n          <CallIcon />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"sidebar_profile\">\r\n        <Avatar src={user.photo} />\r\n        <div className=\"sidebar_profileInfo\">\r\n          <h3>{user.username}</h3>\r\n          <p>#{user._id.substring(0, 5)}</p>\r\n        </div>\r\n\r\n        <div className=\"sidebar_profileIcons\">\r\n          <MicIcon />\r\n          <HeadsetIcon />\r\n          <SettingsIcon />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport \"./ChatHeader.css\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport PeopleAltRoundedIcon from \"@material-ui/icons/PeopleAltRounded\";\r\nimport SearchRoundedIcon from \"@material-ui/icons/SearchRounded\";\r\nimport SendRoundedIcon from \"@material-ui/icons/SendRounded\";\r\nimport HelpRoundedIcon from \"@material-ui/icons/HelpRounded\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectChannelName } from \"../../features/appSlice\";\r\n\r\nconst ChatHeader = props => {\r\n\tconst channel = useSelector(selectChannelName);\r\n\r\n\treturn (\r\n\t\t<div className=\"chatHeader\">\r\n\t\t\t<div className=\"chatHeader_left\">\r\n\t\t\t\t<h3>\r\n\t\t\t\t\t<span className=\"chatHeader_hash\">#</span>\r\n\t\t\t\t\t{channel}\r\n\t\t\t\t</h3>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"chatHeader_right\">\r\n\r\n\t\t\t\t<EditIcon />\r\n\t\t\t\t<NotificationsIcon />\r\n\t\t\t\t<PeopleAltRoundedIcon />\r\n\r\n\t\t\t\t<div className=\"chatHeader_search\">\r\n\t\t\t\t\t<input placeholder=\"Search\" />\r\n\t\t\t\t\t<SearchRoundedIcon />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<SendRoundedIcon />\r\n\t\t\t\t<HelpRoundedIcon />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default ChatHeader;","import { Avatar } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./Message.css\";\r\nimport moment from 'moment';\r\nimport axios from \"axios\";\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n// import EditIcon from '@material-ui/icons/Edit';\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../../features/userSlice\";\r\nimport { selectChannelId } from \"../../features/appSlice\";\r\n\r\nconst Message = props => {\r\n\tconst [creator, setCreator] = useState(\"\");\r\n\tconst user = useSelector(selectUser);\r\n\tconst channelId = useSelector(selectChannelId);\r\n\r\n\tuseEffect(() => {\r\n\t\taxios.get((`http://localhost:8000/api/user/${props.user_id}`))\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetCreator(res.data)\r\n\t\t\t}).catch(errors => console.log(errors)\r\n\t\t);\r\n\t}, [props.user_id]);\r\n\r\n\tconst handleDelete = () => {\r\n\t\taxios\r\n\t\t  .put(`http://localhost:8000/api/channel/${channelId}/remove_message`, {\r\n\t\t\tmessage_id: props._id,\r\n\t\t  })\r\n\t\t  .then((res) => console.log(res))\r\n\t\t  .catch((errors) => console.log(errors));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"message\">\r\n\t\t\t<Avatar src={creator.photo} />\r\n\t\t\t<div className=\"message_info\">\r\n\t\t\t\t<h4>{creator.displayName}\r\n\t\t\t\t\t<span className=\"message_timestamp\">\r\n\t\t\t\t\t\t{moment(props.timestamp).startOf('hour').fromNow()}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t{ user._id === creator._id ? \r\n\t\t\t\t\t<>\r\n\t\t\t\t\t{/* <EditIcon /> */}\r\n\t\t\t\t\t<DeleteForeverIcon onClick={handleDelete}/> \r\n\t\t\t\t\t</> : \r\n\t\t\t\t\t\"\" \r\n\t\t\t\t\t}\r\n\t\t\t\t</h4>\r\n\t\t\t\t<p>{props.content}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default Message;","import React, { useEffect, useState } from \"react\";\r\nimport ChatHeader from \"../chatHeader/ChatHeader\";\r\nimport \"./Chat.css\";\r\nimport Message from \"../message/Message\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport CardGiftcardIcon from \"@material-ui/icons/CardGiftcard\";\r\nimport GifIcon from \"@material-ui/icons/Gif\";\r\nimport EmojiEmotionsIcon from \"@material-ui/icons/EmojiEmotions\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../../features/userSlice\";\r\nimport { selectChannelId, selectChannelName } from \"../../features/appSlice\";\r\nimport axios from \"axios\";\r\nimport io from \"socket.io-client\";\r\n\r\nconst Chat = () => {\r\n  const user = useSelector(selectUser);\r\n  const channelId = useSelector(selectChannelId);\r\n  const channelName = useSelector(selectChannelName);\r\n  const [input, setInput] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [socket] = useState(() => io(':8000'));\r\n\r\n  useEffect(() => {\r\n    if (channelId) {\r\n      axios\r\n        .get(`http://localhost:8000/api/channel/${channelId}`)\r\n        .then((res) => {\r\n          setMessages(res.data.messages.reverse());\r\n        })\r\n        .catch((errors) => console.log(errors));\r\n    }\r\n  }, [channelId, messages]);\r\n\r\n  useEffect(() => {\r\n\t\tsocket.on(\"new_message_from_server\", msg => {\r\n\t\t\tsetMessages(prevMessages => {\r\n\t\t\t\treturn [msg, ...prevMessages];\r\n\t\t\t})\r\n\t\t});\r\n\t}, [socket]);\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n    if (input) {\r\n      axios\r\n        .put(`http://localhost:8000/api/channel/${channelId}/add_message`, {\r\n          creator_id: user._id,\r\n          content: input,\r\n        })\r\n        .then((res) => console.log(res))\r\n        .catch((errors) => console.log(errors));\r\n    }\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat\">\r\n      <ChatHeader />\r\n\r\n      <div className=\"chat_messages\">\r\n        {messages.map((message) => (\r\n          <Message\r\n            key={message._id}\r\n            _id={message._id}\r\n            content={message.content}\r\n            user_id={message.creator_id}\r\n            timestamp={message.createdAt}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"chat_input\">\r\n        <AddCircleIcon fontSize=\"large\" />\r\n        <form>\r\n          <input\r\n            disabled={!channelId}\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            placeholder={`Message #${channelName}`}\r\n          />\r\n          <button\r\n            disabled={!channelId}\r\n            onClick={sendMessage}\r\n            className=\"chat_inputButton\"\r\n            type=\"submit\"\r\n          ></button>\r\n        </form>\r\n\r\n        <div className=\"chat_inputIcons\">\r\n          <CardGiftcardIcon fontSize=\"large\" />\r\n          <GifIcon fontSize=\"large\" />\r\n          <EmojiEmotionsIcon fontSize=\"large\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import { Button } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login } from \"../../features/userSlice\";\r\nimport axios from \"axios\";\r\nimport \"./Login.css\";\r\nimport { Link, navigate } from \"@reach/router\";\r\n\r\nconst Login = () => {\r\n\tconst [username, setUsername] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [error, setError] = useState(\"\");\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst signIn = e => {\r\n\t\te.preventDefault();\r\n\r\n\t\taxios.post(`http://localhost:8000/api/login`, { username, password }, {withCredentials : true})\r\n\t\t\t.then( res => {\r\n\t\t\t\taxios.get(`http://localhost:8000/api/users/loggedin`, {withCredentials : true})\r\n\t\t\t\t\t.then( res => {\r\n\t\t\t\t\t\tdispatch(login({\r\n\t\t\t\t\t\t\t_id: res.data._id,\r\n\t\t\t\t\t\t\tusername: res.data.username,\r\n\t\t\t\t\t\t\tphoto: res.data.photo,\r\n\t\t\t\t\t\t\tdisplayName: res.data.displayName,\r\n\t\t\t\t\t\t\tchannels: res.data.channels\r\n\t\t\t\t\t\t}))\r\n\t\t\t\t\t\tnavigate(\"/app\");\r\n\t\t\t\t\t}).catch(errors => console.log(errors)\r\n\t\t\t\t);\r\n\t\t\t}).catch(errors => console.log(errors), setError(\"Invalid Username / Password\")\r\n\t\t);\r\n\t}\r\n\r\n\tconst guestSignIn = e => {\r\n\t\te.preventDefault();\r\n\r\n\t\tsetUsername(\"guestuser\");\r\n\t\tsetPassword(\"guestpass\");\r\n\r\n\t\taxios.post(`http://localhost:8000/api/login`, { username, password }, {withCredentials : true})\r\n\t\t\t.then( res => {\r\n\t\t\t\taxios.get(`http://localhost:8000/api/users/loggedin`, {withCredentials : true})\r\n\t\t\t\t\t.then( res => {\r\n\t\t\t\t\t\tdispatch(login({\r\n\t\t\t\t\t\t\t_id: res.data._id,\r\n\t\t\t\t\t\t\tusername: res.data.username,\r\n\t\t\t\t\t\t\tphoto: res.data.photo,\r\n\t\t\t\t\t\t\tdisplayName: res.data.displayName,\r\n\t\t\t\t\t\t\tchannels: res.data.channels\r\n\t\t\t\t\t\t}))\r\n\t\t\t\t\t\tnavigate(\"/app\");\r\n\t\t\t\t\t}).catch(errors => console.log(errors)\r\n\t\t\t\t);\r\n\t\t\t}).catch(errors => console.log(errors), setError(\"Invalid Username / Password\")\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"login\">\r\n\t\t\t<div className=\"login_logo\">\r\n\t\t\t\t<img src=\"https://upload.wikimedia.org/wikipedia/sco/thumb/9/98/Discord_logo.svg/800px-Discord_logo.svg.png\" alt=\"\"/>\r\n\t\t\t</div>\r\n\t\t\t<h3>This Project is still under development. Register or click Guest login twice to use application </h3>\r\n\t\t\t<form onSubmit={signIn}>\r\n\t\t\t\t<label htmlFor=\"username\">\r\n\t\t\t\t\tUsername { error ? <p className=\"text-danger\">{error}</p> : \"\"}\r\n\t\t\t\t</label>\r\n\t\t\t\t<input type=\"text\" name=\"username\" autoComplete=\"username\" onChange={e => setUsername(e.target.value)}></input>\r\n\t\t\t\t<label htmlFor=\"password\">Password</label>\r\n\t\t\t\t<input type=\"password\" name=\"password\" autoComplete=\"current-password\" onChange={e => setPassword(e.target.value)}></input>\r\n\t\t\t\t<Button type=\"submit\">Sign In</Button>\r\n\t\t\t\t<Button className=\"guestLogin\" onClick={guestSignIn}>Guest Sign In</Button>\r\n\t\t\t\t<Link className=\"register_link\" to=\"/register\">New around here? Register!</Link>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default Login;","import React, { useState } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Link, navigate } from \"@reach/router\";\r\nimport \"./Register.css\";\r\nimport axios from \"axios\";\r\n\r\nconst Register = () => {\r\n\tconst [username, setUsername] = useState(\"\");\r\n\tconst [displayName, setDisplayName] = useState(\"\");\r\n\tconst [photo, setPhoto] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\tconst [errors, setErrors] = useState({});\r\n\t\r\n\tconst register = e => {\r\n\t\te.preventDefault();\r\n\t\tconst newUser = {username, displayName, photo, password, confirmPassword};\r\n\t\taxios.post(`http://localhost:8000/api/register`, newUser, {withCredentials: true})\r\n\t\t\t.then( res => {\r\n\t\t\t\tconsole.log(res)\r\n\t\t\t\tif(res.data.errors) {\r\n                    setErrors(res.data.errors);\r\n                } else {\r\n                    navigate(\"/\");\r\n                }\r\n\t\t\t}).catch(errors => console.log(errors)\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"register\">\r\n\t\t\t<form onSubmit={register}>\r\n\t\t\t\t<h4>REGISTER</h4>\r\n\t\t\t\t<label htmlFor=\"username\">\r\n\t\t\t\t\tUsername { errors.username ? <span className=\"text-danger\">{errors.username.properties.message}</span> : \"\"}\r\n\t\t\t\t</label>\r\n\t\t\t\t<input name=\"username\" type=\"text\" onChange={e => setUsername(e.target.value)}></input>\r\n\t\t\t\t<label htmlFor=\"displayName\">\r\n\t\t\t\t\tDisplay Name { errors.displayName ? <p className=\"text-danger\">{errors.displayName.properties.message}</p> : \"\"}\r\n\t\t\t\t</label>\r\n\t\t\t\t<input name=\"displayName\" type=\"text\" onChange={e => setDisplayName(e.target.value)}></input>\r\n\t\t\t\t<label htmlFor=\"photo\">\r\n\t\t\t\t\tPhoto (URL) { errors.photo ? <p className=\"text-danger\">{errors.photo.properties.message}</p> : \"\"}\r\n\t\t\t\t</label>\r\n\t\t\t\t<input name=\"photo\" type=\"text\" onChange={e => setPhoto(e.target.value)}></input>\r\n\t\t\t\t<label htmlFor=\"password\">\r\n\t\t\t\t\tPassword { errors.password ? <p className=\"text-danger\">{errors.password.properties.message}</p> : \"\"}\r\n\t\t\t\t</label>\r\n\t\t\t\t<input type=\"password\" onChange={e => setPassword(e.target.value)}></input>\r\n\t\t\t\t<label htmlFor=\"confirmPassword\">\r\n\t\t\t\t\tConfirm Password { errors.confirmPassword ? <p className=\"text-danger\">{errors.confirmPassword.properties.message}</p> : \"\"}\r\n\t\t\t\t</label>\r\n\t\t\t\t<input name=\"confirmPassword\" type=\"password\" onChange={e => setConfirmPassword(e.target.value)}></input>\r\n\t\t\t\t<Button type=\"submit\">Submit</Button>\r\n\t\t\t\t<Link className=\"return_link\" to=\"../\">Return</Link>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default Register;","import React from \"react\";\nimport SideBar from \"./components/sidebar/Sidebar\";\nimport Chat from \"./components/chat/Chat\";\nimport \"./App.css\";\nimport Login from \"./components/login/Login\";\nimport { Router } from \"@reach/router\";\nimport Register from \"./components/register/Register\";\nimport { selectUser } from \"./features/userSlice\";\nimport { useSelector } from \"react-redux\";\n\nfunction App() {\n\n  const user = useSelector(selectUser);\n\n  const Dash = () => {\n    return(\n      <div className=\"app\">\n            <SideBar/>\n            <Chat/>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <Router>\n        {user ? \n        (\n          <Dash path =\"/app\"/>\n        ) : (\n          <>\n          <Login path=\"/\" />\n          <Register path=\"/register\"/>\n          </>\n        )\n      }\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport userReducer from '../features/userSlice';\r\nimport appReducer from '../features/appSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n    app: appReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}